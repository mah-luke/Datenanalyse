#1. Beispiel
install()
#1. Beispiel
set.seed(123)
#1. Beispiel
```{r}
print("test")
install(TSA)
install("TSA")
install.packages("TSA")
install.packages("Rtools")
install.packages("Rtools")
data(airplanes)
data(airmiles)
force(airmiles)
airmiles
data(bluebird)
bluebird
data(bluebird)
install.packages("TSA")
bluebird
data(bluebirdlite)
data(package="TSA",bluebirdlite)
data(package="TSA",bluebird)
bluebird
airmiles
plot(airmiles)
plot(bluebird)
plot(log(airmiles))
plot(exp(airmiles))
plot(airmiles^2)
plot(airmiles)
plot(1/airmiles)
plot(airmiles^-0.5)
plot(airmiles^-0.1)
plot(airmiles^-0.01)
plot(airmiles^(-0.01))
plot(airmiles^(-0.00))
plot(airmiles^(-0.00001))
plot(airmiles^1)
plot(airmiles^-1)
plot(airmiles^0.5)
plot(airmiles^20)
plot(airmiles^-0.01)
plot(airmiles)
plot(airmiles^0.5)
plot(airmiles^0.1)
plot(airmiles^0.01)
plot(airmiles^0.0000001)
plot(airmiles^0.00000000001)
plot(bluebird)
data(package="TSA",boardings)
plot(boardings)
plot(boardings[0])
plot(boardings[1])
plot(boardings$1)
plot(boardings)
plot(boardings[,1])
plot(boardings[,0])
plot(boardings[,2])
plot(boardings[,1])
plot(boardings[])
data(package="TSA",days)
plot(days)
data(package="TSA",electricity)
plot(electricity)
time(electricity)
plot(electricity)
data(package="TSA",electricity) # monthly US electricity production / time series
plot(electricity)
time(electricity)
plot(electricity)
read.csv("MER_T01_02.csv")
raw = read.csv("MER_T01_02.csv")
raw <- read.csv("MER_T01_02.csv")
ts.raw <- ts(raw, frequency = 12)
ts
raw
ts.obj <- ts(raw, frequency = 12)
electTimeSeries <- ts(raw, frequency = 12)
electTS <- ts(raw, frequency = 12)
raw <- read.csv("MER_T01_02.csv")
electTS <- ts(raw, frequency = 12)
View(electTS)
View(raw)
View(electTS)
View(raw)
elecTS
electTS
electTS <- ts(raw,start = 1949, frequency = 12)
View(electTS)
View(raw)
plot(raw)
table <- read.table("MER_T01_02.csv")
table <- read.table(file = "MER_T01_02.csv", sep = ",")
View(table)
make install
ininstall.packages("ghostscript")
install.packages("ghostscript")
getwd()
set.seed(69) # same seed for reproduceability
library(data.table) # used for simplified reading into data frame
library(ggplot2) # used for simplified plotting
# Data from:
# https://www.eia.gov/totalenergy/data/browser/index.php?tbl=T01.02#
# Primary Energy Production by Source in the USA
electricity_raw <- fread(file = "data/MER_T01_02.csv", sep = ",")
# Data from:
# https://www.eia.gov/totalenergy/data/browser/index.php?tbl=T01.02#
# Primary Energy Production by Source in the USA
electricity_raw <- fread(file = "../data/MER_T01_02.csv", sep = ",")
str(electricity_raw) # view basic structure of the data
plot(ts(electricity_raw$Value, start = c(1973, 1), frequency = 12),
main="Raw data values in ts object", ylab="Energy production in Quadrillion Btu")
plot(ts(electricity_raw$Value, start = c(1973, 1), frequency = 12),
main="Raw data values in ts object", ylab="Energy production in Quadrillion Btu")
Wie aus den Daten klar ersichtlich ist, werden nun die unterschiedlichen Energiequellen in der Zeit hintereinander aufgereiht.
Nun wird das Dataframe in seine unterschiedlichen Energiequellen aufgeteilt und diese Teile werden dann als einzelne Zeitreihen behandelt.
Auch kann man eine starke fluktuation in den Datenwerten feststellen. Diese kommt dadurch zustande, dass für jedes Jahr ein Monat 13 gespeichert wurde,
das die Insgesamt produzierte Energie pro Jahr angibt. Dieses dritte Monat muss zusätlich entfernt werden, da es die Daten ansonsten immer um ein Monat
pro Jahr verschiebt.
```{r}
plot(electricity_raw$MSN, ylim = c(0,100))
electricity_raw$MSN
electricity_split <- split(electricity_raw, electricity_raw$MSN)
electricity_split
plot(electricity_split$CLPRBUS$Value)
electricity_split$CLPRBUS$Value
coal <- electricity_split$CLPRBUS
str(coal)
ggplot(data = coal, aes(YYYYMM, Value)) +
# geom_point() +
ggtitle("Energy produced via coal")
ggplot(data = coal, aes(YYYYMM, Value)) +
geom_point() +
ggtitle("Energy produced via coal")
